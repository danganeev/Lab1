<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Lab1">
    <BooleanToVisibilityConverter x:Key="BooleanToVisConverter" />
    <local:StringToBooleanConverter x:Key="isNullConverter"/>

    <Style x:Key="EventNameStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding EventName, Converter={StaticResource isNullConverter}}" Value="False">
                <Setter Property="Background" Value="LightGreen"></Setter>
            </DataTrigger>

        </Style.Triggers>
        
    </Style>
    <Style x:Key="EventLocationStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding EventLocation, Converter={StaticResource isNullConverter}}" Value="False">
                <Setter Property="Background" Value="LightGreen"></Setter>
            </DataTrigger>

        </Style.Triggers>

    </Style>
    <Style x:Key="EventDescriptionStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding EventDescription, Converter={StaticResource isNullConverter}}" Value="False">
                <Setter Property="Background" Value="LightGreen"></Setter>
            </DataTrigger>

        </Style.Triggers>

    </Style>
    <Style x:Key="NotificationTimeStyle" TargetType="TextBox">
        <Setter Property="Background" Value="LightPink"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding NotificationTime, Converter={StaticResource isNullConverter}}" Value="False">
                <Setter Property="Background" Value="LightGreen"></Setter>
            </DataTrigger>

        </Style.Triggers>

    </Style>


    <Style x:Key="CancelButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Width" >
                        <DoubleAnimation From="95" To="130" Duration="00:00:00.5"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard TargetProperty="Height" >
                        <DoubleAnimation From="25" To="35" Duration="00:00:00.5"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Width" >
                        <DoubleAnimation From="130" To="95" Duration="00:00:01"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard TargetProperty="Height" >
                        <DoubleAnimation From="35" To="25" Duration="00:00:01"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightPink"/>
                <Setter Property="BorderBrush" Value="Red"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="SaveButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Width" >
                        <DoubleAnimation From="95" To="130" Duration="00:00:00.5"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard TargetProperty="Height" >
                        <DoubleAnimation From="25" To="35" Duration="00:00:00.5"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard TargetProperty="Width" >
                        <DoubleAnimation From="130" To="95" Duration="00:00:01"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard TargetProperty="Height" >
                        <DoubleAnimation From="35" To="25" Duration="00:00:01"></DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGreen"/>
                <Setter Property="BorderBrush" Value="DarkGreen"/>
            </Trigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>